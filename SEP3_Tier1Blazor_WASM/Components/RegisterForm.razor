@using SEP3_Tier1Blazor_WASM.Data
@using SEP3_Tier1Blazor_WASM.Data.UserData
@using SEP3_Tier1Blazor_WASM.Models
@inject NavigationManager NavigationManager
@inject IUserManger UserManger

@if (!IsEditForm)
{
    <div class="login-popup">
        <h2>Registration</h2>
        <div class="content">
            <EditForm Model="@User" OnValidSubmit="CreateAccount">
                @if (AccountType.Equals("RegularUser"))
                {
                    <div class="control-group">
                        <InputText class="form-input" placeholder="First Name" @bind-Value="firstName" @onclick=HideResult />
                        <InputText class="form-input" placeholder="Last Name" @bind-Value="lastName" @onclick=HideResult />
                    </div>
                }

                @if (AccountType.Equals("PageOwner"))
                {
                    <InputText class="form-input" placeholder="Name" @bind-Value="User.Name" @onclick=HideResult />
                }

                <InputText class="form-input" placeholder="Email" @bind-Value="User.Email" @onclick=HideResult />
                <InputText type="password" class="form-input" placeholder="Password"@bind-Value="User.Password" @onclick=HideResult />
                <InputText type="password" class="form-input" placeholder="Password Confirmation" style="border-bottom: 5px;" @bind-Value="passwordConfirmation" @onclick=HideResult />

                @if (AccountType.Equals("RegularUser"))
                {
                    <InputText class="form-input" placeholder="City" style="border-bottom: 5px;" @bind-Value="User.City" @onclick=HideResult />
                }

                @if (AccountType.Equals("PageOwner"))
                {
                    <div class="control-group">
                        <InputText class="form-input" placeholder="Street" style="border-bottom: 5px;" @bind-Value="Address.Street" @onclick=HideResult />
                        <InputText class="form-input" placeholder="Number" @bind-Value="Address.Number" @onclick=HideResult />
                    </div>
                    <div class="control-group">
                        <InputText class="form-input" placeholder="City" style="border-bottom: 5px;" @bind-Value="User.City" @onclick=HideResult />
                    </div>
                }

                <input type="submit" style="margin-top: 0px" class="form-button" value="Create Account"/>
                <div style="padding: 20px">@((MarkupString) resultInformation)</div>
            </EditForm>
        </div>
    </div>
}

else
{
    <div class="login-popup">
        <h2>Registration</h2>
        <div class="content">
            <EditForm Model="@User" OnValidSubmit="EditAccount">
                <InputText class="form-input" placeholder="Description" @bind-Value="User.Description" @onclick=HideResult />

                <input type="submit" style="margin-top: 0px" class="form-button" value="Create Account"/>
                <div style="padding: 20px">@((MarkupString) resultInformation)</div>
            </EditForm>
        </div>
    </div>
}


@code {

    [Parameter]
    public string AccountType { get; set; }

    [Parameter]
    public bool IsEditForm { get; set; }

    [Parameter]
    public User EditedUser { get; set; }


    private string firstName;
    private string lastName;

    public User User { get; set; }
    public Address Address { get; set; }

    private string passwordConfirmation;
    private string resultInformation = "";

    protected override void OnInitialized()
    {
        if (EditedUser != null)
        {
            User = EditedUser;
        }
        else
        {
            Address = new Address();
            User = new User()
            {
                Address = Address
            };
        }
    }

    private void CreateAccount()
    {
        if (AccountType.Equals("RegularUser"))
            User.Name = firstName + " " + lastName;


        if (UserManger.AddNewUser(User).IsCompletedSuccessfully)
            resultInformation = "<span class='info-message' style='color:green;'>Account successfully created!</span>";
        else
            resultInformation = "<span class='info-message' style='color:red;'>Server connection error, try later</span>";
    }

    private void EditAccount()
    {
        if (UserManger.EditUser(User).IsCompletedSuccessfully)
            resultInformation = "<span class='info-message' style='color:green;'>Account successfully edited!</span>";
        else
            resultInformation = "<span class='info-message' style='color:red;'>Server connection error, try later</span>";
    }

    private void HideResult()
    {
        if (!resultInformation.Equals(""))
        {
            resultInformation = "";
        }
    }

}