@using System.Globalization
<div class="calendar-card col-2" @onclick=OpenTrainingView>
    <div class="row">
        <h2 class="title col-12">Welcome</h2>
        <h4 class="sub-title col-12 text-muted">Plan for today</h4>
    </div>
    <div class="row date-box">
        <h3 class="col-12 date-title">Today</h3>
        <h4 class="col-9 date">@today</h4>
    </div>

    @if (dayView)
{
    <h4 class="training-subtitle">Upcoming Trainings</h4>
    
     foreach (var training in trainings)
        {
            <div class="row date-box d-flex align-items-center">
                <h4 class="date-title col-9">@training.Title</h4>
                <div class="duration-box col-3">@training.DurationInMinutes min</div>
                <p class="date training-time col-12">
                    Training time:
                    @if (training.TimeStamp.Hour < 10)
                    {
                        @zeroForTime
                    }
                    @training.TimeStamp.Hour:
                    @if (training.TimeStamp.Minute < 10)
                    {
                        @zeroForTime
                    }
                    @training.TimeStamp.Minute
                </p>
                @if (!training.IsCompleted)
                {
                    <div class="complete-box col-12">
                        <button class="training-complete-button" @onclick=@(e => MarkTrainingComplete(training))>Complete</button>
                    </div>
                }
                else
                {
                    <div class="complete-box col-12">
                        Completed
                        <img src="/img/completed.png" alt="completed" width="40" height="40"/>
                    </div>
                }
            </div>
        }
    <h7 class="col-12 text-muted card-end ">No more trainings</h7>
}
else
{
    <h4 class="training-subtitle">Training Plan</h4>
    
    foreach (var exercise in exercises)
    {
        <div class="row date-box d-flex align-items-center">
            <h7 class="text-muted">@exercise.Type</h7>
            <h4 class="date-title col-12">@exercise.Title</h4>
            <p class="date training-time col-12">
                @exercise.Description
            </p>
        </div>
    }
    
    <button class="training-plan-back-button"@onclick=OpenDayView >Day View</button>
}
</div>

@code {

    private string today;
    private bool dayView = true;
    private string zeroForTime = "0";
    private List<TrainingModel> trainings;
    private List<ExerciseModel> exercises;
    private RenderFragment renderFragment;


    protected async override Task OnInitializedAsync()
    {
        trainings = new List<TrainingModel>();
        exercises = new List<ExerciseModel>();

        trainings.Add(new TrainingModel {DurationInMinutes = 60, IsCompleted = true, TimeStamp = DateTime.Now.AddMinutes(47), Title = "Full body training"});
        trainings.Add(new TrainingModel {DurationInMinutes = 45, IsCompleted = false, TimeStamp = DateTime.Now, Title = "Stretching"});

        string month = CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(DateTime.Now.Month);
        today = $"{DateTime.Now.Day} {month} {DateTime.Now.Year}";
    //get trainings for today
    }


    private async Task MarkTrainingComplete(TrainingModel trainingModel)
    {
        trainingModel.IsCompleted = true;
        StateHasChanged();
    }

    private async Task OpenTrainingView()
    {
        //get exercises for training
        exercises = new List<ExerciseModel>();
        exercises.Add(new ExerciseModel{Description = "Amazing exercise, 5 series each 3min and 1min break. Do perfect pushups with a straight back.", Title = "Powerful Pushups", Type = "Strong"});
        exercises.Add(new ExerciseModel{Description = "Amazing exercise, 5 series each 3min and 1min break. Do perfect pushups with a straight back.", Title = "Powerful Pushups", Type = "Strong"});
        dayView = false;
        StateHasChanged();
    }
    
    private void OpenDayView()
    {
       exercises = new List<ExerciseModel>();
        dayView = true;
        StateHasChanged();
    }

}